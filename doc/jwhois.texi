\input texinfo  @c -*-texinfo-*-
@c %**start of header
@setfilename jwhois.info
@settitle jwhois, Whois client
@c %**end of header

@direntry
* jwhois: (jwhois).     Whois client.
@end direntry

@c This file has the new style title page commands.
@c Run `makeinfo' rather than `texinfo-format-buffer'.

@c smallbook

@c tex
@c \overfullrule=0pt
@c end tex

@c Combine indices.
@synindex cp fn
@syncodeindex vr fn
@syncodeindex ky fn
@syncodeindex pg fn
@syncodeindex tp fn

@ifinfo
This file documents @sc{jwhois}, a Whois client.

Copyright (C) 1999-2001  Free Software Foundation, Inc.

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

@ignore
Permission is granted to process this file through TeX and print the
results, provided the printed document carries copying permission
notice identical to this one except for the removal of this paragraph
(this paragraph not being relevant to the printed manual).

@end ignore
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.
@end ifinfo

@setchapternewpage off

@titlepage
@title jwhois
@subtitle Version 3.0
@subtitle 6 September 2001
@author Jonas Öberg @code{(jonas@@gnu.org)}

@page
@vskip 0pt plus 1filll
Copyright @copyright{} 1999-2001  Free Software Foundation, Inc.

@sp 2
Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.
@end titlepage
@page

@node Top, Introduction, (dir), (dir)

This file documents the GNU jwhois package, en extended Whois client.
This is edition 3.0, for jwhois version 3.0, last updated 6 september 2001.

@menu
* Introduction::                Introduction
* Invocation::                  How to invoke jwhois
* Site Configuration::          Syntax of the configuration file
* RIPE Extensions::             Extensions for RIPE databases
* Reporting bugs::              Reporting bugs

@detailmenu
 --- The Detailed Node Listing ---

Site Configuration

* Global::                      Global configuration options
* Whois-servers::               List of query rules
* Server-options::              

@end detailmenu
@end menu

@node Introduction, Invocation, Top, Top
@chapter Introduction

@sc{jwhois} is an Internet Whois client that queries hosts for information
according to RFC 954 - NICNAME/WHOIS. @sc{jwhois} is configured via a
configuration file that contains information about all known Whois servers.
Upon execution, the host to query is selected based on the information in
the configuration file.

The configuration file is highly customizable and makes heavy use of
regular expressions.

@node Invocation, RIPE Extensions, Introduction, Top
@chapter Invocation

@sc{jwhois} uses the following command-line options:
@table @samp

@item --version
Print the program version and licensing information.

@item --help
Print a usage message summarizing the command-line options.

@item -c FILE
@item --config=FILE
Reads configuration from FILE instead of from the default
system global configuration file.

@item -h HOST
@item --host=HOST
Overrides any specifications in the configuration file and queries HOST
directly.

@item -p PORT
@item --port=PORT
Specifies a port number to use when querying a HOST

@item -f
@item --force-lookup
Forces a query to be made to a host even if a current object
is available from the cache.

@item -v
@item --verbose
Outputs verbose debugging information while running (use this before
sending a bugreport to ensure that it's indeed a bug and not a 
misconfiguration).

@item -n
@item --no-redirect
Disable features that redirect queries from one server to another.

@item -s
@item --no-whoisservers
Disable the built-in support for whois-servers.net.

@item -a
@item --raw
Send query verbatim to receiving hosts instead of rewriting them according
to the configuration.

@item -i
@item --display-redirections
Display every step in a redirection (default is to display only the
last answer).

@item -d
@item --disable-cache
Completely disable both reading and writing to cache

@item -r
@item --rwhois
Force the query to use the rwhois protocoll instead of HTTP or whois.

@item --rwhois-display=DISPLAY
Asks receiving rwhois servers to display the results in the DISPLAY display
instead of the default dump display.

@item --rwhois-limit=LIMIT
asks receiving rwhois servers to limit their responses to LIMIT matches.

@end table

The query can optionally contain the character @samp{@@} followed by
a host name to direct the search to that host. This works exactly like
specifying the host with @samp{--host} or @samp{-h}.

@node Site Configuration, Cache Functionality, RIPE Extensions, Top
@chapter Site Configuration

@sc{jwhois} is configurable via its configuration file, normally
called @file{jwhois.conf}. This file is looked for in the sysconfdir
that was specified when compiling the program (default is
@file{/usr/local/etc/} on most systems).

If no configuration file can be found, @sc{jwhois} will default all queries
to @url{whois.internic.net}.

An example configuration file that includes most known Whois servers can be
found in the @code{example} subdirectory of the official distribution.
This example configuration also contains a lot of well used options
that should be suitable for most setups.

The configuration file is split into a number of blocks. Each block
can contain a number of different options which are explained in the
sections below. You can also get an overview of the syntax by looking
at the example configuration file included in the distribution.

@menu
* Global options::              Global configuration options
* Whois-servers::               List of query rules
* Server-options::              
@end menu

@node Global options, Whois-servers, Site Configuration, Top
@chapter Global options

The global options of @sc{jwhois} configure some basic facilities
that are to be used for all hosts and queries made.

@table @option
@item cachefile
By default, the location of the cache file is
@file{/usr/local/var/jwhois.db}, but this can be changed
at compile time. The option @option{cachefile} also
changes the location.

@item cacheexpire
The default expire time for all cached objects it
7 days (168 hours). this can be changed with the
@option{cacheexpire} option. The value is the number
of hours that objects is considered to be current.

@item whois-servers-domain
Whois-servers.net is a service offered by the
CenterGate Research Group. They register CNAMEs in
the @url{whois-servers.net} domain for every known
top-level domain, pointing to the appropriate whois
server.

When querying for @samp{wildebeest.se} for example,
@sc{jwhois} would look for an address @url{se.whois-servers.net}
and query the appropriate server based on that information.

If you wish to make whois-servers.net-style queries
using another domain name than @url{whois-servers.net}, you
can change this option to the domain name you want.

@item browser-pathname
@item browser-stdarg
@item browser-postarg
These options control the HTTP support on @sc{jwhois}.
@option{browser-pathname} should be set to the path
and executable of the browser you wish to use to download
information from HTTP-gateways. This is normally a
program such as @sc{lynx} or @sc{curl}.

@option{browser-stdarg} sets the arguments to pass to
the browser in order to have the browser direct its
options to the standard output. @sc{jwhois} catches
this information and displays it to the user.

@option{browser-postarg} sets the arguments used to
enable a @sc{lynx}-style processing of POST requests.
A @sc{lynx}-style processing means that the program,
when passed this option, should accept one variable
per line of input on standard input, ended with three
dashes.

@end table

Examples:

@example
cachefile = "/var/lib/jwhois.db";
cacheexpire = 168;
browser-pathname = "/usr/bin/lynx";
browser-stdarg = "-dump";
browser-postarg = "-post_data";
@end example

@node Whois servers, Content-redirect, Global, Site Configuration
@chapter Whois servers

When making a query, @sc{jwhois} looks at the @option{whois-servers}
block to determine which host to send the query to. This block
consists of a number of rules. Each rule is evaluated in turn,
starting with the first one in @option{whois-servers}.
A rule consists of a key and a value. The key can be either
a special option, or a CIDR block or regular expression that
is matched against the query that the user specified.

The special option @option{type} takes one value, either
@option{cidr} or @option{regex}. This defines the current
blocks matching. Each block can match either with CIDR
blocks or regular expressions, never both.

If the key is a regular expression, the value can take on
of two forms. Either a single string containing the hostname
of the appropriate whois-server, optionally postfixed with
a colon and a port number, or a block.

If the value of the regular expression is a block, it can
contain any number of options. The options @option{whois-server}
and @option{query-format} are supported today.

@option{whois-server} specifies the hostname of the whois server
to send a query to, optionally postfixed with a colon and a
port number, just as if the value had been a single string
containing the whois server hostname.

@option{query-format} rewrites queries matching this rule
according to the contents of the options value. The special
characters @samp{$*} are replaced with the original query.

Examples:

@example
whois-servers @{
        type = regex;

	"\\([0-9]+\\.\\)+[0-9]+" = "struct cidr-blocks";
        ".*-[A-Z]+$" = "struct handles";

        ".*" = "whois.internic.net";
@};
handles @{
        type = regex;

        ".*-RIPE$" = "whois.ripe.net";
@};

cidr @{
        type = cidr;

        "61.0.0.0/8" @{
                whois-server = "whois.apnic.net";
                query-format = "$* /e";
        @}
        default = "whois.arin.net";
@};

@end example

@node Server options, Content-redirect, Whois servers, Top
@chapter Server options

The @option{server-options} block defines a number of parameters
that are specific to each host.


@node Content-redirect, , Whois-servers, Site Configuration
@chapter Content-redirect

@option{content-redirect} is a special block designed to
parse the output returned by a Whois server looking for
special regular expressions and then sending the same query
to the Whois server gotten from the regular expression.

The key value is the name of the Whois server that this
expression is applicable to. This is matched using regular
expressions. The value is the regexp that is looked for in
the output, with hostname and optional port number enclosed
in so called subexpressions or groups.

@example
content-redirect @{
        ".*" = ".*Whois Server: \\(.*\\)";
@};
@end example

@node Cache Functionality, Reporting bugs, Site Configuration, Top
@chapter Cache Functionality

@sc{jwhois} implements support for maintaining a cache of Whois data
received from Whois servers. This is NOT enabled by default but has
to be compiled into the client specifically. The design is such that
a central database is maintained by the client and because all users
should have access to that database, the program must have the
set-group-on-execution bit set and the database must be both read and
writable by the group.

The configuration options available are @sc{cachefile} and @sc{cacheexpire}
which sets the database filename and the expire time for cached object.
When an object expires from the cache, it is reloaded from the Whois server
the next time it is requested. The expire time is measured in hours.

@node RIPE Extensions, Site Configuration, Invocation, Top
@chapter RIPE Extensions

RIPE (Réseaux IP Européens) has defined a number of options that can be
used against a RIPE-compatible whois server (ripe.net, apnic.net and
others).  Unfortunately, there is really no way of telling whether a
host we are connecting to is RIPE-compatible or not.  RIPE extensions
are therefore not directly incorporated into the @sc{jwhois} client.
A list of the options can be found in RIPE Document 157 which you can get
from the RIPE ftp server, @url{ftp://ftp.ripe.net/ripe/docs/}.

It is possible to use these options together with @sc{jwhois} by changing
the format of the query slightly. If you were to search for all entries in
the RIPE database which lists the admin-c, tech-c or zone-c as CO19-RIPE,
you could use the following command syntax:

@example
$ jwhois -h whois.ripe.net -- -i admin-c,tech-c,zone-c CO19-RIPE
@end example

@samp{--} is used to separate the RIPE options from the jwhois options.

@node Reporting bugs,  , Cache Functionality, Top
@chapter Reporting bugs

Email bug reports to @code{bug-jwhois@@gnu.org}.

@contents
@bye
